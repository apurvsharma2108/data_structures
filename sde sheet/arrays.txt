1). https://leetcode.com/problems/sort-colors/
gfg link : https://practice.geeksforgeeks.org/problems/sort-an-array-of-0s-1s-and-2s4231/1

------------------------------------------------------------------------------------------------------------------------------------

3). https://practice.geeksforgeeks.org/problems/merge-two-sorted-arrays-1587115620/1#
method 1 has less time complexity but has extra space complexity 
where as method 2 has less space complexity but more time complexity


------------------------------------------------------------------------------------------------------------------------------------

5). https://www.youtube.com/watch?v=2JzRBPFYbKE&list=PLgUwDviBIf0rPG3Ictpu74YWBQ1CaBkm2&index=7

class Solution:
    def merge(self, intervals: List[List[int]]) -> List[List[int]]:
        intervals.sort()
        merged_list=[]
        for i in intervals:
            
            if len(merged_list) == 0 or merged_list[-1][1] < i[0]:
                merged_list.append(i)
                
            else:
                merged_list[-1][1]=max(merged_list[-1][1] , i[1])
                
        return merged_list
------------------------------------------------------------------------------------------------------------------------------------
6). https://www.youtube.com/watch?v=32Ll35mhWg0&list=PLgUwDviBIf0rPG3Ictpu74YWBQ1CaBkm2&index=2

class Solution:
    def findDuplicate(self, a: List[int]) -> int:
        hare,turtle=a[0],a[0]
        while(True):
            hare=a[hare]
            turtle=a[a[turtle]]
            
            if hare==turtle:
                break
        turtle=a[0]
        while(hare!=turtle):
            hare=a[hare]
            turtle=a[turtle]
        
        return hare
------------------------------------------------------------------------------------------------------------------------------
        a.sort()
        count=0
        for i in range(len(a)-1):
            if a[i+1]==a[i]:
                    count=a[i]
                    break
        return count
------------------------------------------------------------------------------------------------------------------------------------

6).
